services:
  scraper-base:
    build:
      context: ./scraper-base
      dockerfile: Dockerfile
    image: cityagent-scraper-base:latest

  elife_scraper:
    build:
      context: ./elife_scraper
      dockerfile: Dockerfile
    image: cityagent-elife-scraper:latest
    depends_on:
      - scraper-base
    env_file: .env
    volumes:
      - ./utils:/app/utils:ro
    restart: always

  wt_scraper:
    build:
      context: ./wt_scraper
      dockerfile: Dockerfile
    image: cityagent-wt-scraper:latest
    depends_on:
      - scraper-base
    env_file: .env
    volumes:
      - ./utils:/app/utils:ro
    restart: always

  analyzer:
    build:
      context: ./analyzer
      dockerfile: Dockerfile
    image: cityagent-analyzer:latest
    env_file: .env
    volumes:
      - ./utils:/app/utils:ro
    restart: always

  calendar_scraper:
    build:
      context: ./calendar_scraper
      dockerfile: Dockerfile
    image: cityagent-calendar-scraper:latest
    env_file: .env
    volumes:
      - ./utils:/app/utils:ro
    restart: always

  geo:
    build:
      context: ./geo
      dockerfile: Dockerfile
    image: cityagent-geo:latest
    env_file: .env
    volumes:
      - ./utils:/app/utils:ro
    restart: always

  match:
    build:
      context: ./match
      dockerfile: Dockerfile
    image: cityagent-match:latest
    env_file: .env
    volumes:
      - ./utils:/app/utils:ro
    restart: always

  # ðŸ†• [ADDED] Ollama Service (Phi-2 AI Model)
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    restart: always
    networks:
      - cityagent-network

  # ðŸ†• [UPDATED] Dashboard Service (Streamlit App)
  dashboard:
    build:
      context: ./gui
      dockerfile: Dockerfile
    image: cityagent-dashboard:latest
    env_file: .env
    volumes:
      - ./utils:/app/utils:ro
    ports:
      - "8501:8501"
    depends_on:
      - ollama
    restart: always
    networks:
      - cityagent-network

# ðŸ†• [ADDED] Custom Network
networks:
  cityagent-network:
    driver: bridge
